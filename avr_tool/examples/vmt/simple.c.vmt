(set-info :source |printed by MathSAT|)
(declare-fun .PC.0 () Bool)
(declare-fun .PC.1 () Bool)
(declare-fun .PC.2 () Bool)
(declare-fun x__1$main () (_ BitVec 32))
(declare-fun __RET__$main.next () (_ BitVec 32))
(declare-fun .PC.0.next () Bool)
(declare-fun .PC.1.next () Bool)
(declare-fun __RET__$main () (_ BitVec 32))
(declare-fun .PC.2.next () Bool)
(declare-fun |__NONDET_INLINE_INIT__4__3$main#0| () (_ BitVec 32))
(declare-fun n__3$main.next () (_ BitVec 32))
(declare-fun x__1$main.next () (_ BitVec 32))
(declare-fun n__3$main () (_ BitVec 32))
(define-fun .def_13 () Bool (! .PC.0 :next |.PC.0.next|))
(define-fun .def_14 () Bool (not .def_13))
(define-fun .def_11 () Bool (! .PC.1 :next |.PC.1.next|))
(define-fun .def_12 () Bool (not .def_11))
(define-fun .def_15 () Bool (and .def_12 .def_14))
(define-fun .def_9 () Bool (! .PC.2 :next |.PC.2.next|))
(define-fun .def_10 () Bool (not .def_9))
(define-fun .def_16 () Bool (! (and .def_10 .def_15) :init true))
(define-fun .def_72 () Bool (= n__3$main.next |__NONDET_INLINE_INIT__4__3$main#0|))
(define-fun .def_70 () Bool (= x__1$main.next (_ bv0 32)))
(define-fun .def_73 () Bool (and .def_70 .def_72))
(define-fun .def_67 () Bool (bvslt n__3$main.next (_ bv1 32)))
(define-fun .def_68 () Bool (not .def_67))
(define-fun .def_74 () Bool (and .def_68 .def_73))
(define-fun .def_29 () (_ BitVec 32) (! __RET__$main :next |__RET__$main.next|))
(define-fun .def_31 () Bool (= .def_29 __RET__$main.next))
(define-fun .def_75 () Bool (and .def_31 .def_74))
(define-fun .def_42 () Bool (not .PC.2.next))
(define-fun .def_18 () Bool (not .PC.1.next))
(define-fun .def_41 () Bool (and .def_18 .PC.0.next))
(define-fun .def_43 () Bool (and .def_41 .def_42))
(define-fun .def_76 () Bool (and .def_43 .def_75))
(define-fun .def_77 () Bool (and .def_16 .def_76))
(define-fun .def_34 () (_ BitVec 32) (! x__1$main :next |x__1$main.next|))
(define-fun .def_27 () (_ BitVec 32) (! n__3$main :next |n__3$main.next|))
(define-fun .def_60 () Bool (bvslt .def_27 .def_34))
(define-fun .def_45 () (_ BitVec 32) (bvadd (_ bv4294967295 32) .def_27))
(define-fun .def_46 () Bool (bvslt .def_45 .def_34))
(define-fun .def_61 () Bool (and .def_46 .def_60))
(define-fun .def_28 () Bool (= n__3$main.next .def_27))
(define-fun .def_62 () Bool (and .def_28 .def_61))
(define-fun .def_63 () Bool (and .def_31 .def_62))
(define-fun .def_35 () Bool (= x__1$main.next .def_34))
(define-fun .def_64 () Bool (and .def_35 .def_63))
(define-fun .def_20 () Bool (not .PC.0.next))
(define-fun .def_58 () Bool (and .PC.1.next .def_20))
(define-fun .def_59 () Bool (and .def_42 .def_58))
(define-fun .def_65 () Bool (and .def_59 .def_64))
(define-fun .def_55 () Bool (and .def_12 .def_13))
(define-fun .def_56 () Bool (and .def_10 .def_55))
(define-fun .def_66 () Bool (and .def_56 .def_65))
(define-fun .def_78 () Bool (or .def_66 .def_77))
(define-fun .def_49 () (_ BitVec 32) (bvadd (_ bv1 32) .def_34))
(define-fun .def_50 () Bool (= x__1$main.next .def_49))
(define-fun .def_47 () Bool (not .def_46))
(define-fun .def_51 () Bool (and .def_47 .def_50))
(define-fun .def_52 () Bool (and .def_28 .def_51))
(define-fun .def_53 () Bool (and .def_31 .def_52))
(define-fun .def_54 () Bool (and .def_43 .def_53))
(define-fun .def_57 () Bool (and .def_54 .def_56))
(define-fun .def_79 () Bool (or .def_57 .def_78))
(define-fun .def_38 () Bool (and .def_11 .def_14))
(define-fun .def_39 () Bool (and .def_10 .def_38))
(define-fun .def_32 () Bool (and .def_28 .def_31))
(define-fun .def_36 () Bool (and .def_32 .def_35))
(define-fun .def_21 () Bool (and .def_18 .def_20))
(define-fun .def_23 () Bool (and .def_21 .PC.2.next))
(define-fun .def_37 () Bool (and .def_23 .def_36))
(define-fun .def_40 () Bool (and .def_37 .def_39))
(define-fun .def_80 () Bool (or .def_40 .def_79))
(define-fun .def_24 () Bool (and .def_9 .def_15))
(define-fun .def_25 () Bool (and .def_23 .def_24))
(define-fun .def_81 () Bool (! (or .def_25 .def_80) :trans true))
(define-fun .def_82 () Bool (! (not .def_24) :invar-property 0))
(assert true)

